# nums = [1, 2, 3, 4, 5, 6, 7]
# print('max :',max(nums))
# print('min :',min(nums))
# cook = ["피자", "김밥", "만두", "양념치킨", "족발", "피자", "김치만두", "쫄면", "소시지", "라면", "팥빙수", "김치전"]
# print(len(cook))
# nums = [1, 2, 3, 4, 5]
# # print(sum(nums) / len(nums))
# # price = ['20180728', 100, 130, 140, 150, 160, 170]
# # print(price[1:])
# # nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# # print(nums[::2])
# # print(nums[1::2])
# # nums = [1, 2, 3, 4, 5]
# # print(nums[::-1])
# interest = ['삼성전자', 'LG전자', 'Naver']
# print(interest[0])
# print(interest[2])
# interest = ['삼성전자', 'LG전자', 'Naver', 'SK하이닉스', '미래에셋대우']
# print("/".join(interest))
# print("\n".join(interest))
# string = "삼성전자/LG전자/Naver"
# interest = string.split("/")
# print(interest)
# data = [2, 4, 3, 1, 5, 10, 9]
# data.sort()
# print(data)
# t1=()#비어있는 튜플
# t2=(2,)#값이 하나있는 튜플 = 원소 뒤에 콤마를 붙혀서 Tuple로 인식시킨다
# print(type(t2))
# t3=(1,2,3)#값이 여러개있는 튜플
#
# s1 = "abc"
# l1= list(s1)
# print(l1)
# l2= [1,2,3]
# t4=tuple(l2)
# print(t4,type(t4))
# t1 = (1,2,3,4)
# l1 = [1,2,3,4]
#리스트의 수정
#l1의 2번째 값을 7로 변경
# l1[2] = 7
# # print(l1)
# t1 = (1,2,3,4)
 #t1을 원소 5,6,7,8이 들어간 튜플로 변경시키려면 어떻게 해야하는가
# t1= (5,6,7,8)
# t1 =list(t1)
# t1[2] = 7
# print(t1)
# t1=tuple(t1)
# print(t1)
#리스트와 튜플의 공통점
# t1 = (1,2,3,4,5)
# t2 = (6,7,8)
#1. 인덱싱, 슬라이싱
# print(t1[3]) #출력삾 4
# print(t1[1:3])#출력삾 2,3

#슬라이싱
# 변수[x:y] == 변수의 x번째 index부터 y-1 index까지 범위를 잘라낸다

# 2. 덧셈 곱셈 연산
# t3=t1+t2
# print(t3)
# t4 = t2*2
# print(t4)
#
# print(len(t4)) #길이==원소의 개수
#71
# my_variable = ()
#72
# movie_rank = ('닥터 스트레인지',"스플릿",'럭키')
#73
# t1 = (1,)
# print(t1)
#74
# t = (1, 2, 3)
# t[0] = 'a' #tuple은 immutable한 자료형이기때문에 값을 변경할수없다
#75
t = 1, 2, 3, 4      #소괄호  ()가 없어도 원소가 나열하면 tuple로 인식한다.
# print(type(t))
#76
# t = ('a', 'b', 'c')
#t를 ('A', 'B', 'C')로 변경
# t =('A', 'B', 'C')
#77 => 자료형의 변환(형변환)
# interest = ('삼성전자', 'LG전자', 'SK Hynix')
# l_inter = list(interest)
# print(l_inter)
#78
# interest = ['삼성전자', 'LG전자', 'SK Hynix']
# t_inter = tuple(interest)
# print(t_inter,type(t_inter))
#79 언팩킹(unpacking) => 묶여있는 원소들을 풀어헤친다.
#unpacking을 하기 위해서는 원소를 받아줄 변수가 원소의 개수와 동일해야한다
# temp = ('apple', 'banana', 'cake')
# a, b, c = temp
# print("a= %s, b =%s, c =%s" %(a,b,c))
#80     range() 함수 사용 방법은 슬라이싱과 매우 유사한다
t1 = tuple(range(2,100,2))
print(t1)
