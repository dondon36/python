# def binary (n,arr):
#     new_arr = []
#     for i in arr:
#         b= ""
#         while i:
#             b += str(i%2)
#             i //=2
#         b = b[::-1]
#         # b의 길이가 n보다 작으면 앞에다 0을 더해준다.
#         while len(b) < n:
#             b = '0' + b
#         new_arr.append(b)
#
#     return new_arr
#
# def solution (n, arr1, arr2):
#     arr1=binary(n,arr1)
#     arr2=binary(n,arr2)
#     print(arr1)
#     print(arr2)
#     answer = []
#     for i in range(n):
#         sub = ""
#         for j in range(n):
#             if int(arr1[i][j])>0 or int(arr2[i][j])>0:  #반복해서 arr의 1일때까지 만약 1이면 벽 출력=리스트
#                 sub += '#'
#             else:
#                 sub += ' '
#         answer.append(sub)
#     #     for k in range(n):
#     #         if arr1[j][k]==0 and arr2[j][k] == 0:
#     #             result += ' '
#     #         else:
#     #             result += '#'
#
#     return answer
#
# n=5 #=1
# arr1=[9, 20, 28, 18, 11]
# arr2=[30, 1, 21, 17, 28]
# print(solution(n,arr1,arr2))
# def solution(food):         #사용하지 못하는 음식 찾기->남는 음식 2로 나누기
#     answer = '0'             # ->모두 반복하면(1,2,3) 물 먹기->역순으로(3,2,1) 반복
#     for i in range(len(food)-1,0,-1):       #i는 음식의 종류
#         cnt=food[i] // 2                    #음식의 개수
#         f = str(i) * cnt
#         answer = f + answer + f       #333
#     return answer
#
#
#
#
# food=[1, 3, 4, 6]
# print(solution(food))
# food=[1, 7, 1, 2]
# print(solution(food))
#틱택토 프로젝트
#3X3 보드판 O나 x를 선택 후, 빙고가 되도록 보드판 선택
#로그인, o나 x를 선택하는 기능,O나 X를 보드판 입력하는 기능,우승 확인,
#보드판을 확인하는 기능,컴퓨터가 랜덤한 위치에 o나 x를 입력하는 기능,

#게임 실행 순서
#1.로그인
#1-1 ID,PW 입력
#1-2 ID,PW가 등록되어있는 txt파일에서 조회
#1-3 입력횟수가 3회 이상 초과할 경우 종료,일치할 시 게임
#2.o,x 선택
#2-1 컴퓨터는 플레이어가 선택하는 것에 반대되는 문양을 지정

#3.보드판에 플레이어기 선택한 문양을 입력(위치선택)
#3-1 이미 입력된 자리일 경우 다시 입력받는다.
#4.우승 조건 판별
#4-1우승 조건: 한줄 빙고
#5.컴퓨터가 랜덤한 자리에 문양 입력
#6.우승조건판별
#3~6은 우승 조건이 나오기 전까지나 무승부 조건이 되기 전까지 반복




#파일 입출력
# open("파일이름","w,r,a")
#w=쓰기,r = 읽기, a=추가
file = open('login.txt',"r",encoding="utf8")
f1 = file.readlines() #ID

print(f1)

file.close()
